swagger: "2.0"
info:
  version: "0.0.1"
  title: "User Management API"
  description: "User Management API"

basePath: "/v1/api"
schemes:
  - "http"
  - "https"

produces:
  - "application/json"

paths:
  /usermanagement/users:
    get:
      summary: "Retrieves all users"
      description: "Returns all users from a store"
      operationId: "getUsers"
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/User"
  /usermanagement/user/{userName}:
    put:
      summary: "Update an existing user"
      description: ""
      operationId: "updateUser"
      consumes:
        - "application/json"
      parameters:
        - name: "userName"
          in: "path"
          description: "Username of user"
          required: true
          type: "string"
        - name: "user"
          in: "body"
          description: "User object that needs to be updated"
          required: true
          schema:
            $ref: "#/User"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
        405:
          description: "Validation exception"
    delete:
      summary: "Delete a user"
      description: ""
      operationId: "deleteUser"
      parameters:
        - name: "userName"
          in: "path"
          description: "Username to delete"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
  /usermanagement/role:
    get:
      summary: "Retrieves all roles"
      description: "Returns all roles from a store"
      operationId: "getRoles"
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: array
            items:
              type: string